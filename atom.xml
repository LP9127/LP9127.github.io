<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Home</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liupei.link/"/>
  <updated>2022-08-15T14:39:58.339Z</updated>
  <id>https://liupei.link/</id>
  
  <author>
    <name>liupei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Go构建模式</title>
    <link href="https://liupei.link/2022/08/15/Go%E6%9E%84%E5%BB%BA%E6%A8%A1%E5%BC%8F/"/>
    <id>https://liupei.link/2022/08/15/Go构建模式/</id>
    <published>2022-08-15T13:54:47.000Z</published>
    <updated>2022-08-15T14:39:58.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Go构建模式的演化"><a href="#1-Go构建模式的演化" class="headerlink" title="1.Go构建模式的演化"></a>1.Go构建模式的演化</h3><h4 id="1-1-什么是Go的构建模式"><a href="#1-1-什么是Go的构建模式" class="headerlink" title="1.1 什么是Go的构建模式"></a>1.1 什么是Go的构建模式</h4><p>Go程序的构建过程就是确定包版本，编译包以及将编译后得到的目标文件链接在一起的过程</p><h4 id="1-2-GOPATH的构建模式"><a href="#1-2-GOPATH的构建模式" class="headerlink" title="1.2 GOPATH的构建模式"></a>1.2 GOPATH的构建模式</h4><p>1.GOPATH构建模式的构建过程</p><ul><li><p>在GOPATH构建模式下，Go编译的时候，会在GOPATH的环境变量目录下寻找依赖的第三方包，如果找到了，就使用这个第三方包进行编译，没找到，就会报编译错误</p></li><li><p>如果在本地没有找到第三方包，可以使用go get命令，将第三方包以及第三方包的依赖包下载到本地</p></li></ul><p>在Mac或Linux上，GPOPATH的默认环境变量目录是 $HOME/go</p><p>2.GOPATH构建模式的缺点</p><ul><li><p>go get获取到的时候当前时刻，第三方包的依赖版本，随着时间的演进，第三方包也会更新版本，这样就会导致不同时期获取到的第三方包版本不一样</p></li><li><p>因为go get获取的是最新版本，因此当第三方包的最新版本有bug，也会一直影响程序构建</p></li></ul><p>在GOPATH构建模式下，Go编译器没有关注第三方依赖包的版本</p><h4 id="1-3-vendor机制"><a href="#1-3-vendor机制" class="headerlink" title="1.3 vendor机制"></a>1.3 vendor机制</h4><p>1.什么是vendor机制</p><p>在项目的vendor目录下，将项目所依赖的第三方包缓存起来</p><p>2.vendor机制解决了什么问题</p><p>只要有vendor目录，Go程序会优先使用vendor下缓存的第三方包，不会优先使用GOPATH环境变量目录下的第三方包，因此提交代码的时候，如果将vendor目录一并提交，那其他开发者拉取代码之后，就可以直接进行构建</p><p>3.开启vendor机制的必要条件</p><p>Go项目必须位于GOPATH环境变量配置的某个路径的src目录下面</p><p>4.vendor机制的缺点</p><ul><li><p>Go项目必须位于GOPATH环境变量配置的某个路径的src目录下面</p></li><li><p>vendor目录必须提交到代码仓库，减慢了代码的提交和下载速度</p></li><li><p>开发者需要手工管理依赖包，包括依赖包的分析、版本记录、依赖包的获取等</p></li></ul><h4 id="1-4-Go-Module"><a href="#1-4-Go-Module" class="headerlink" title="1.4 Go Module"></a>1.4 Go Module</h4><p>1.什么是Go Module</p><ul><li><p>Go module是一些Go包的集合，这些包和 module 一起打版本、发布和分发。</p></li><li><p>通常一个代码仓库对应一个Go module</p></li></ul><p>2.go.mod文件</p><ul><li><p>go.mod文件放置在Go Module的顶层目录下</p></li><li><p>一个Go Module和一个go.mod文件一一对应，也就是说，一个Go Module只会存在一个go.mod文件</p></li></ul><p>3.如何创建一个Go Module</p><p><strong>第一步，通过 go mod init 创建 go.mod 文件，将当前项目变为一个 Go Module</strong></p><p>注意：在构建module时， go mod init $modulePath, 这个modulePath怎么写</p><p>modulePath的作用：</p><p>a.定位仓库的地址。如果代码开源到公共托管站点或者公司内部的代码仓库，那modulePath就要带上仓库的地址，这样其他依赖这个module才可以找得到</p><p>b.如果module不在根目录下，就是一个项目中可能有多个module，不在根目录下的module，modulePath中需要带上子目录路径</p><p>c.major版本号。如果major&gt;=2，需要在module path中加上major号后缀</p><p><strong>第二步，通过 go mod tidy 命令下载依赖并自动更新当前go.mod文件</strong></p><p>go mod tidy 下载的依赖 module 会被放置在本地的 module 缓存路径下，默认值为 $GOPATH[0]/pkg/mod，Go 1.15 及以后版本可以通过 GOMODCACHE 环境变量，自定义本地 module 的缓存路径</p><p><strong>第三步，执行 go build，执行新 module 的构建</strong></p><p>go build 命令会读取 go.mod 中的依赖及版本信息，并在本地 module 缓存路径下找到对应版本的依赖 module，执行编译和链接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-Go构建模式的演化&quot;&gt;&lt;a href=&quot;#1-Go构建模式的演化&quot; class=&quot;headerlink&quot; title=&quot;1.Go构建模式的演化&quot;&gt;&lt;/a&gt;1.Go构建模式的演化&lt;/h3&gt;&lt;h4 id=&quot;1-1-什么是Go的构建模式&quot;&gt;&lt;a href=&quot;#1-1
      
    
    </summary>
    
    
      <category term="Go" scheme="https://liupei.link/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>20220814芭蕾日记</title>
    <link href="https://liupei.link/2022/08/14/20220814%E8%8A%AD%E8%95%BE%E7%AC%94%E8%AE%B0/"/>
    <id>https://liupei.link/2022/08/14/20220814芭蕾笔记/</id>
    <published>2022-08-14T15:08:25.000Z</published>
    <updated>2022-08-14T15:19:17.617Z</updated>
    
    <content type="html"><![CDATA[<h3 id="软开"><a href="#软开" class="headerlink" title="软开"></a>软开</h3><p>横叉度秒如年，不过今天横叉坚持了很久，也有比较大的进步，痛并快乐～不知道为什么，咬牙坚持了很久，当和我一组的小姐姐问老师我是不是可以下了，因为我已经爬很久了的时候，尽管老师说再爬2min，但还是忍不住了，太酸爽了，下周继续努力吧</p><h3 id="基训"><a href="#基训" class="headerlink" title="基训"></a>基训</h3><h4 id="1-地面坐姿"><a href="#1-地面坐姿" class="headerlink" title="1.地面坐姿"></a>1.地面坐姿</h4><p>后背太拉垮了，后背没有力气，加上腹部力量也不够，不能一直保持后背向上，好无奈，把老师都气笑了，下个阶段要重点解决腹背肌</p><h4 id="2-转开练习"><a href="#2-转开练习" class="headerlink" title="2.转开练习"></a>2.转开练习</h4><p>整个下半身都酸酸酸，上课感觉没有转的很开，但是下课后感觉屁股很酸，假装是用对肌肉了吧，地面还是要多练，把杆才能更稳</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;软开&quot;&gt;&lt;a href=&quot;#软开&quot; class=&quot;headerlink&quot; title=&quot;软开&quot;&gt;&lt;/a&gt;软开&lt;/h3&gt;&lt;p&gt;横叉度秒如年，不过今天横叉坚持了很久，也有比较大的进步，痛并快乐～不知道为什么，咬牙坚持了很久，当和我一组的小姐姐问老师我是不是可以下了，因
      
    
    </summary>
    
    
      <category term="芭蕾" scheme="https://liupei.link/tags/%E8%8A%AD%E8%95%BE/"/>
    
  </entry>
  
  <entry>
    <title>Go程序的结构</title>
    <link href="https://liupei.link/2022/08/14/Go%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BB%93%E6%9E%84/"/>
    <id>https://liupei.link/2022/08/14/Go程序的结构/</id>
    <published>2022-08-14T06:04:57.000Z</published>
    <updated>2022-08-15T14:40:02.500Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-一个最基本的Go程序"><a href="#1-一个最基本的Go程序" class="headerlink" title="1.一个最基本的Go程序"></a>1.一个最基本的Go程序</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main <span class="comment">//定义一个包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span> <span class="comment">//声明fmt包的导入路径</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123; <span class="comment">//main函数</span></span><br><span class="line">    fmt.Println(<span class="string">"hello, world"</span>) <span class="comment">//Println函数定义于fmt包中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-包的概念"><a href="#1-1-包的概念" class="headerlink" title="1.1 包的概念"></a>1.1 包的概念</h4><ul><li><p>包（package）是Go语言的基本组成单元，一个Go程序本质上就是一组包的集合</p></li><li><p>整个Go程序中只能存在一个main包</p></li></ul><h4 id="1-2-main函数"><a href="#1-2-main函数" class="headerlink" title="1.2 main函数"></a>1.2 main函数</h4><p>当执行一个可执行的Go程序时，程序执行的入口就是main函数</p><h4 id="1-3-声明包的导入路径"><a href="#1-3-声明包的导入路径" class="headerlink" title="1.3 声明包的导入路径"></a>1.3 声明包的导入路径</h4><p>import “fmt”指的是，导入标准库fmt目录下的包</p><h4 id="1-4-fmt包"><a href="#1-4-fmt包" class="headerlink" title="1.4 fmt包"></a>1.4 fmt包</h4><p>fmt.Println(“hello, world”)中的fmt指的是包名，和import “fmt”中的fmt不一样</p><h4 id="1-5-Println函数"><a href="#1-5-Println函数" class="headerlink" title="1.5 Println函数"></a>1.5 Println函数</h4><p>Println函数位于标准库fmt目录下的fmt包中，Println的首字母大写，代表对fmt包外的代码可见，如果全部是小写，代表只在声明它的包内可见</p><h3 id="2-Go程序的编译和执行"><a href="#2-Go程序的编译和执行" class="headerlink" title="2.Go程序的编译和执行"></a>2.Go程序的编译和执行</h3><h4 id="2-1-使用go-build命令进行编译"><a href="#2-1-使用go-build命令进行编译" class="headerlink" title="2.1 使用go build命令进行编译"></a>2.1 使用go build命令进行编译</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> build main.<span class="keyword">go</span><span class="comment">//编译，得到一个二进制文件</span></span><br><span class="line">$ ./main  <span class="comment">//执行</span></span><br></pre></td></tr></table></figure><p>使用go build命令进行编译，编译成功后得到一个可执行二进制文件，这个二进制文件在没有go的环境中也可以执行</p><h4 id="2-2-使用go-run命令可直接执行go源文件"><a href="#2-2-使用go-run命令可直接执行go源文件" class="headerlink" title="2.2 使用go run命令可直接执行go源文件"></a>2.2 使用go run命令可直接执行go源文件</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run main.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><p>go run命令更多的是开发和调试阶段使用，在实际的项目中要先使用go build进行构建</p><h3 id="3-Go-module"><a href="#3-Go-module" class="headerlink" title="3.Go module"></a>3.Go module</h3><blockquote><p>Go module是Go默认的包依赖管理机制和Go源码构建机制。</p><p>一个 module 就是一些包的集合，这些包和 module 一起打版本、发布和分发。</p><p>Go Module 的核心是一个名为 go.mod 的文件，在这个文件中存储了这个 module 对第三方依赖的全部信息。</p></blockquote><h4 id="3-1-go-mod文件的生成"><a href="#3-1-go-mod文件的生成" class="headerlink" title="3.1 go.mod文件的生成"></a>3.1 go.mod文件的生成</h4><p>进入目标目录，执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> mod init github.com/hellomodule  <span class="comment">//go mod 初始化的时候一般用源代码存储仓库，使 go 工具能下载到，如果只是本地测试可以随便起名，如: example/hellomodule</span></span><br></pre></td></tr></table></figure><p>执行完成之后，在目标目录下成功一个go.mod文件，这个目标目录称为被声明的module的根目录</p><h4 id="3-2-添加依赖包的版本信息"><a href="#3-2-添加依赖包的版本信息" class="headerlink" title="3.2 添加依赖包的版本信息"></a>3.2 添加依赖包的版本信息</h4><ul><li><p>手动添加</p></li><li><p>使用go mod tidy命令自动添加</p></li></ul><h4 id="3-3-go-sum文件"><a href="#3-3-go-sum文件" class="headerlink" title="3.3 go.sum文件"></a>3.3 go.sum文件</h4><blockquote><p>go.sum 的文件，这个文件记录了 hellomodule 的直接依赖和间接依赖包的相关版本的 hash 值，用来校验本地包的真实性。在构建的时候，如果本地依赖包的 hash 值与 go.sum 文件中记录的不一致，就会被拒绝构建</p></blockquote><blockquote><p>推荐把 go.mod 和 go.sum 两个文件与源码，一并提交到代码版本控制服务器上</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-一个最基本的Go程序&quot;&gt;&lt;a href=&quot;#1-一个最基本的Go程序&quot; class=&quot;headerlink&quot; title=&quot;1.一个最基本的Go程序&quot;&gt;&lt;/a&gt;1.一个最基本的Go程序&lt;/h3&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;tab
      
    
    </summary>
    
    
      <category term="Go" scheme="https://liupei.link/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>20220813芭蕾日记</title>
    <link href="https://liupei.link/2022/08/13/20220813%E8%8A%AD%E8%95%BE%E6%97%A5%E8%AE%B0/"/>
    <id>https://liupei.link/2022/08/13/20220813芭蕾日记/</id>
    <published>2022-08-13T15:18:55.000Z</published>
    <updated>2022-08-14T15:24:25.933Z</updated>
    
    <content type="html"><![CDATA[<h3 id="芭蕾基训"><a href="#芭蕾基训" class="headerlink" title="芭蕾基训"></a>芭蕾基训</h3><h4 id="Pile"><a href="#Pile" class="headerlink" title="Pile"></a>Pile</h4><p>1.grand pile的时候，Allonge呼吸手往下的时候，手要贴近身体划下来</p><p>2.四位grand pile的时候，后腿要保持转开</p><p>3.grand pile起来的时候，脚后跟主动踩，然后经过demi pile再起来</p><h4 id="tendu"><a href="#tendu" class="headerlink" title="tendu"></a>tendu</h4><p>1.在快的组合中，还是顾不上动作要点，问题主要有两个</p><ul><li><p>擦地的时候没有经过半脚掌</p></li><li><p>主力腿的转开和伸直的力量太少</p></li></ul><p>2.自从上了pbt，屁股往里收，从跨根转开的感觉能找到了，缺点是不能一直保持，当把注意力放在脚上的时候，还是会忘记屁股使劲，主力腿转开</p><p>3.现在复杂的组合也能记住了，随着练习次数的增多，记组合的能力也变强了</p><h4 id="passe"><a href="#passe" class="headerlink" title="passe"></a>passe</h4><p>1.吸起来的速度一定要快，一步到位；同时手的动作也要快</p><p>2.吸起来的时候，主力腿主动转开，同时腰也要拔起来，这次这两个动作有进步，整个passe感觉更稳，整个人也更舒展挺拔了</p><h4 id="jete"><a href="#jete" class="headerlink" title="jete"></a>jete</h4><p>1.jete一定要经过擦地出去，不能直接踢出去</p><p>2.jete一定要有力量，一步到位，高度为25度</p><h4 id="fondu"><a href="#fondu" class="headerlink" title="fondu"></a>fondu</h4><p>1.蹲的时候膝盖要留住，动力腿主动往回收，动力腿要有力量</p><p>2.今天加的新动作，主力腿在半脚尖上，直腿落脚后跟的时候，动力腿应该往上，形成对抗的力量</p><h4 id="en-Dehors"><a href="#en-Dehors" class="headerlink" title="en Dehors"></a>en Dehors</h4><p>空中划的时候，首先主力腿伸直，动力腿，从旁到后，保持转开，用脚尖划</p><h4 id="en-Dedans"><a href="#en-Dedans" class="headerlink" title="en Dedans"></a>en Dedans</h4><p>从旁到前，主力腿伸直，主力腿往下踩，左腰向上，身体不要向后躺，力量不要都集中在动力腿上</p><h3 id="pbt"><a href="#pbt" class="headerlink" title="pbt"></a>pbt</h3><p>1.用力绷脚的时候，感受到一点力量延伸释放出去的感觉，惊喜！</p><p>2.腹背肌力量好差，周内不上课，尽量用健身弥补吧</p><p>3.瑜伽球上的五位简直人间地狱，多找找下面那条腿内侧往里夹的感觉吧，希望下次可以控制住不从球上翻下来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;芭蕾基训&quot;&gt;&lt;a href=&quot;#芭蕾基训&quot; class=&quot;headerlink&quot; title=&quot;芭蕾基训&quot;&gt;&lt;/a&gt;芭蕾基训&lt;/h3&gt;&lt;h4 id=&quot;Pile&quot;&gt;&lt;a href=&quot;#Pile&quot; class=&quot;headerlink&quot; title=&quot;Pile&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="芭蕾" scheme="https://liupei.link/tags/%E8%8A%AD%E8%95%BE/"/>
    
  </entry>
  
  <entry>
    <title>Go语言变量和常量</title>
    <link href="https://liupei.link/2022/08/09/Go%E8%AF%AD%E8%A8%80%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/"/>
    <id>https://liupei.link/2022/08/09/Go语言变量和常量/</id>
    <published>2022-08-09T15:44:08.000Z</published>
    <updated>2022-08-09T15:46:13.473Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-变量的声明和赋值"><a href="#1-变量的声明和赋值" class="headerlink" title="1.变量的声明和赋值"></a>1.变量的声明和赋值</h3><h4 id="1-1-变量的声明"><a href="#1-1-变量的声明" class="headerlink" title="1.1 变量的声明"></a>1.1 变量的声明</h4><ul><li><p>var语句用于声明变量/变量列表，类型放在最后</p></li><li><p>var语句可以出现在包或函数级别</p></li><li><p>可以一次声明多个变量</p></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c, jython, java <span class="keyword">bool</span> <span class="comment">//出现在包级别，一次声明多个变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> i <span class="keyword">int</span> <span class="comment">//出现在函数级别</span></span><br><span class="line"></span><br><span class="line">  fmt.Println(i, c, python, java) <span class="comment">//输出是0 false false false</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-变量的赋值"><a href="#1-2-变量的赋值" class="headerlink" title="1.2 变量的赋值"></a>1.2 变量的赋值</h4><h5 id="1-2-1-变量的初始化"><a href="#1-2-1-变量的初始化" class="headerlink" title="1.2.1 变量的初始化"></a>1.2.1 变量的初始化</h5><ul><li><p>在定义变量的时候声明变量的类型并且给变量赋值</p></li><li><p>变量的值如果是默认类型，在进行变量赋值的时候也可以省略类型</p></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在定义变量的时候声明变量的类型并且给变量赋值</span></span><br><span class="line"></span><br><span class="line">Var a <span class="keyword">int</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//go有类型推断能力，如果使用默认类型（数值型、字符型、布尔型、字符串）的话，可以在声明变量的时候把类型删掉</span></span><br><span class="line"></span><br><span class="line">Var（</span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    b = <span class="number">1</span></span><br><span class="line">）</span><br></pre></td></tr></table></figure><h5 id="1-2-2-可以同时对多个变量进行初始化"><a href="#1-2-2-可以同时对多个变量进行初始化" class="headerlink" title="1.2.2 可以同时对多个变量进行初始化"></a>1.2.2 可以同时对多个变量进行初始化</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同时声明多个变量可以进行简写</span></span><br><span class="line"></span><br><span class="line">Var a <span class="keyword">int</span> = <span class="number">1</span></span><br><span class="line">Var b <span class="keyword">int</span> = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以上两行可以简写为</span></span><br><span class="line"></span><br><span class="line">Var（</span><br><span class="line">    a <span class="keyword">int</span> = <span class="number">1</span></span><br><span class="line">    b <span class="keyword">int</span> = <span class="number">2</span></span><br><span class="line">）</span><br><span class="line"></span><br><span class="line"><span class="comment">//也可以简写为</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a, b <span class="keyword">int</span> = <span class="number">1</span>, <span class="number">2</span></span><br></pre></td></tr></table></figure><h5 id="1-2-3-可以先给变量声明，再赋值"><a href="#1-2-3-可以先给变量声明，再赋值" class="headerlink" title="1.2.3 可以先给变量声明，再赋值"></a>1.2.3 可以先给变量声明，再赋值</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先声明变量的类型，后给变量赋值</span></span><br><span class="line"></span><br><span class="line">Var a <span class="keyword">int</span> <span class="comment">//注意，在声明变量a的时候，类型放在最后</span></span><br><span class="line"></span><br><span class="line">a=<span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="1-2-4-短变量声明"><a href="#1-2-4-短变量声明" class="headerlink" title="1.2.4 短变量声明"></a>1.2.4 短变量声明</h5><p>定义：在变量初始化时省略变量的类型，由系统自行判断</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a, b :=<span class="number">50</span> ,<span class="string">"abc"</span>  <span class="comment">//a和b的类型（int，string）由系统自行判断</span></span><br></pre></td></tr></table></figure><p>这种声明方式只能用在函数体内，不可以用于全局变量的声明和赋值</p><p>在相同的代码块中，不可以对同一个名称的变量进行再次初始化声明；但是可以对一个已经初始化声明的变量进行再次赋值</p><h5 id="1-2-5-交换两个变量的值"><a href="#1-2-5-交换两个变量的值" class="headerlink" title="1.2.5 交换两个变量的值"></a>1.2.5 交换两个变量的值</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,b=b,a</span><br></pre></td></tr></table></figure><h5 id="1-2-6-零值（没有明确初始值的变量会被赋予-零值）"><a href="#1-2-6-零值（没有明确初始值的变量会被赋予-零值）" class="headerlink" title="1.2.6 零值（没有明确初始值的变量会被赋予 零值）"></a>1.2.6 零值（没有明确初始值的变量会被赋予 零值）</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">数值类型为 <span class="number">0</span>，</span><br><span class="line"></span><br><span class="line">布尔类型为 <span class="literal">false</span>，</span><br><span class="line"></span><br><span class="line">字符串为 <span class="string">""</span>（空字符串），判断字符串的为空时，判断字符串是否等于 <span class="string">""</span>  而不是判断字符串是否等于<span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">float :<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">pointer, function, <span class="keyword">interface</span>, slice, channel, <span class="keyword">map</span>:<span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">复合类型: <span class="keyword">go</span>语言会自动递归地将每一个元素初始化为其类型对应的零值。比如：数组， 结构体 。</span><br></pre></td></tr></table></figure><p>说明：风格尽量简单一致，因此后续可能有一部分功能可能会被禁用</p><h4 id="1-3-变量的声明和其它语言的差异"><a href="#1-3-变量的声明和其它语言的差异" class="headerlink" title="1.3 变量的声明和其它语言的差异"></a>1.3 变量的声明和其它语言的差异</h4><p>go是一种强类型语言</p><ul><li><p>赋值可以进行自动类型判断</p></li><li><p>在一个赋值语句中可以对多个变量同时进行赋值</p></li></ul><h3 id="2-常量的定义"><a href="#2-常量的定义" class="headerlink" title="2.常量的定义"></a>2.常量的定义</h3><p>常量的声明与变量类似，只不过是使用 const 关键字</p><p>常量可以是字符、字符串、布尔值或数值</p><p>常量不能用 := 语法声明</p><p>数值常量：一个未指定类型的常量由上下文来决定它的类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//连续的变量赋值</span></span><br><span class="line"></span><br><span class="line">Const(</span><br><span class="line">    Monday = <span class="literal">iota</span> + <span class="number">1</span> <span class="comment">//代表后面的变量依次在iota的基础上加1</span></span><br><span class="line">    Tuesday  <span class="comment">//tuesday会被自动赋值为2</span></span><br><span class="line">    Wednesday  <span class="comment">//wednes会被自动赋值为3</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//连续的位运算</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span>(</span><br><span class="line">    Open = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span>  <span class="comment">//代表后面的变量依次在iota的基础上左移一位</span></span><br><span class="line">    <span class="built_in">close</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>补充：iot从常量结构的第一行（不包含注释和空行）开始，从0逐行加1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-变量的声明和赋值&quot;&gt;&lt;a href=&quot;#1-变量的声明和赋值&quot; class=&quot;headerlink&quot; title=&quot;1.变量的声明和赋值&quot;&gt;&lt;/a&gt;1.变量的声明和赋值&lt;/h3&gt;&lt;h4 id=&quot;1-1-变量的声明&quot;&gt;&lt;a href=&quot;#1-1-变量的声明&quot; c
      
    
    </summary>
    
    
      <category term="Go" scheme="https://liupei.link/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>DemiPile</title>
    <link href="https://liupei.link/2022/08/08/DemiPile/"/>
    <id>https://liupei.link/2022/08/08/DemiPile/</id>
    <published>2022-08-08T14:02:05.000Z</published>
    <updated>2022-08-09T14:36:50.380Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Demi-Pile动作要点"><a href="#Demi-Pile动作要点" class="headerlink" title="Demi Pile动作要点"></a>Demi Pile动作要点</h3><h4 id="1-腿部肌肉在pile中如何运用"><a href="#1-腿部肌肉在pile中如何运用" class="headerlink" title="1.腿部肌肉在pile中如何运用"></a>1.腿部肌肉在pile中如何运用</h4><p>要点：大腿的肌肉要持续的不断的发力，把力量往上延伸到尽头</p><p>大腿力量往上使到尽头了的表现：</p><ul><li><p>大腿从视觉上看起来更细</p></li><li><p>大腿的肌肉到膝盖之间有一定距离</p></li><li><p>大腿的内侧肌肉也要使劲，摸一下，如果大腿肌肉是可以晃动的，说明还不够使劲</p></li><li><p>如果力量没有使到头，在地面上做动作的时候，膝盖离地面是有一定空隙的，是没有完全紧贴地面的</p></li><li><p>如果大腿力量没有向上使到头，抬腿的时候，膝盖也是弯的；</p></li></ul><h4 id="2-脚部肌肉在pile中如何使用"><a href="#2-脚部肌肉在pile中如何使用" class="headerlink" title="2.脚部肌肉在pile中如何使用"></a>2.脚部肌肉在pile中如何使用</h4><p>要点：脚指头平铺在地面上，感觉脚使劲往下踩，脚趾头牢牢的抓住地面</p><p>脚往下使劲的表现：</p><p>站在地上的时候可以看到脚踝前面的部分有一根筋凸显出来，如果没有一根筋凸显出来，说明站的不够使劲，同时做的整个过程中，这根筋也不能放松，这样可以增加脚腕子的稳定性</p><h4 id="3-如何做出有质感的Demi-pile"><a href="#3-如何做出有质感的Demi-pile" class="headerlink" title="3.如何做出有质感的Demi pile"></a>3.如何做出有质感的Demi pile</h4><p>要点：往下蹲的时候，要往上提着做；往下之前，头顶找天花板，腿部肌肉往上提，大腿内侧也要使劲；往下的时候有控制的往下</p><p>起来之后，再使劲一下，再往上收紧一下，再往下进行下一次的蹲</p><p>错误做法：直接整个人往下蹲，没有往上提着向下蹲；蹲下去的时候，整个大腿是软的</p><h4 id="4-肌肉保持外开"><a href="#4-肌肉保持外开" class="headerlink" title="4.肌肉保持外开"></a>4.肌肉保持外开</h4><p>要点：屁股收紧，从跨根转开，保证不倒脚的前提（不要倒脚，足弓离地面有距离，距离越高越好），控制小腿往前转（从前面看，可以看到更多的小腿肌肉），膝盖冲脚尖的方向</p><p>错误的做法：只是脚尖冲旁，膝盖和小腿完全冲前</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Demi-Pile动作要点&quot;&gt;&lt;a href=&quot;#Demi-Pile动作要点&quot; class=&quot;headerlink&quot; title=&quot;Demi Pile动作要点&quot;&gt;&lt;/a&gt;Demi Pile动作要点&lt;/h3&gt;&lt;h4 id=&quot;1-腿部肌肉在pile中如何运用&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="芭蕾" scheme="https://liupei.link/tags/%E8%8A%AD%E8%95%BE/"/>
    
  </entry>
  
  <entry>
    <title>2021，保持热爱</title>
    <link href="https://liupei.link/2021/01/07/2021%EF%BC%8C%E4%BF%9D%E6%8C%81%E7%83%AD%E7%88%B1/"/>
    <id>https://liupei.link/2021/01/07/2021，保持热爱/</id>
    <published>2021-01-07T14:27:04.000Z</published>
    <updated>2021-09-26T14:06:40.457Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="一、我的美好生活"><a href="#一、我的美好生活" class="headerlink" title="一、我的美好生活"></a><strong>一、我的美好生活</strong></h2><h5 id="1-美好的一天从早餐开始"><a href="#1-美好的一天从早餐开始" class="headerlink" title="1.美好的一天从早餐开始"></a><strong>1.美好的一天从早餐开始</strong></h5><p>自从搬家之后，离公司更近了，每天可以早起做做早餐，每天吃自己做的早餐，感觉工作起来都很有劲，其实之前住蓝堡公寓的时候也想过，但因为住得远，另外也觉得住公寓总像个宿舍，所以自己做早餐这件事也一直没有落实，看来住得离工作的地方近还是很有好处的，以后尽量也要选择一个离家近的公司～</p><p>记录一下我的早餐菜单</p><ul><li><p>酸奶吐司：做起来非常简单方便，重点是烤的时候房间里都是面包香味，闻起来就非常满足</p></li><li><p>火腿鸡蛋卷饼：六月香豆瓣酱+老碗会的油泼辣子拌起来，真的有路边煎饼果子的味道</p></li><li><p>烤红薯：一定要买蜜薯，蒸45min，冬天里，房间里充满烤红薯的香味，真的能让我心情大好</p></li><li><p>鸡蛋羹：一定要放鱼豉油，但是我蒸出来的鸡蛋羹是个马蜂窝，还是再多琢磨琢磨</p></li><li><p>煮玉米：感觉深圳买的玉米总是煮不出玉米的香味，好失望</p></li><li><p>蒸芋头：蒸芋头可以蘸什么酱料呢？没有蘸料好难吃</p></li></ul><p>新的一年，希望我也能保持做早餐的习惯，美好的一天从美味的早餐开始～并且要多开发一些好吃的早餐😋</p><h5 id="2-美好的周末从少叫外卖开始"><a href="#2-美好的周末从少叫外卖开始" class="headerlink" title="2.美好的周末从少叫外卖开始"></a><strong>2.美好的周末从少叫外卖开始</strong></h5><p>发现周末自己安安静静地做一顿饭，除了吃自己做的饭比较满足之外，更加享受和治愈的是做饭的过程，安安静静的，脑子里可以随意想点东西，没有具体的想某一件事情，真的有种岁月静好的感觉，2020年已经学会了包子、饺子、糖饼、煎饼、手擀面、麻食、鱼香肉丝、宫保鸡丁、土豆炖鸡肉，希望2021再多学会几个菜</p><h5 id="3-学会做减法"><a href="#3-学会做减法" class="headerlink" title="3.学会做减法"></a><strong>3.学会做减法</strong></h5><p>今天搬了一次家，在蓝堡住了也有两年多了，搬家的时候发现真的有挺多东西的，很多不用的基本都扔掉或者送给同事了，搬到新家感觉很轻松，以后也要养成定期给家里做减法的习惯</p><h2 id="二、终生运动"><a href="#二、终生运动" class="headerlink" title="二、终生运动"></a><strong>二、终生运动</strong></h2><p>前两天在公司内部报名了一节《复盘方法论》的课程，其中讲师讲到了他通过参加一个减脂训练营达到了减肥的目的之后，一直坚持运动，并且发现了运动的诸多好处，比如自己坚持运动后身材越来越好、基本也不怎么生病了，老师也重点情调了，运动这件事情是终生，我听了之后特别认同这件事情。我也发现了运动的很多好处，不生病、会变瘦这些我到没感受太多，重点是感觉运动很开心，能让我的身体保持一个良好的状态去工作、学习、玩耍。在2020年的最后一个月，我也终于从旱鸭子，变成了水中小🐢，希望自己2021年继续坚持芭蕾、坚持游泳，游出牛奶水光肌！</p><h2 id="三、努力工作"><a href="#三、努力工作" class="headerlink" title="三、努力工作"></a><strong>三、努力工作</strong></h2><p>2020年感觉对工作的投入还不够多，重点是业余没有将太多的时间投入在工作上面，这一点在今年要重点反思并改进一下。近几天又听到了一则刚毕业没多久的学生在下班路上猝死的新闻，我认为，从我现在的工作情况来讲，如果多提高一点自己的工作效率，还是大部分时间都可以做到不加班的，所以不要闷头一直干工作，多想办法提升效率，也就没有那么多加班啦～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;一、我的美好生活&quot;&gt;&lt;a href=&quot;#一、我的美好生活&quot; class=&quot;headerlink&quot; title=&quot;一、我的美好生活&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、我的美好生活&lt;/strong&gt;&lt;/h2&gt;&lt;h5 id=&quot;1-美好的一天从早餐开
      
    
    </summary>
    
    
      <category term="总结" scheme="https://liupei.link/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>蛙泳笔记</title>
    <link href="https://liupei.link/2020/12/27/%E8%9B%99%E6%B3%B3%E7%AC%94%E8%AE%B0/"/>
    <id>https://liupei.link/2020/12/27/蛙泳笔记/</id>
    <published>2020-12-27T11:36:41.000Z</published>
    <updated>2020-12-27T15:10:38.677Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="一、蛙泳"><a href="#一、蛙泳" class="headerlink" title="一、蛙泳"></a><strong>一、蛙泳</strong></h2><h5 id="1-憋气换气"><a href="#1-憋气换气" class="headerlink" title="1.憋气换气"></a><strong>1.憋气换气</strong></h5><p>手抓住池边，用嘴巴吸一大口气存在胸腔，然后将头埋在水中，注意头埋下去的时候不要埋的太浅，尽量让水没过耳朵；然后在水中大概停3～5秒左右，嘴巴开始在水中吐气，吐气整个过程包括出水面吐一半左右就可以，不要全部吐光（全部吐光身体会下沉，下沉的太多，头就抬不起来了）；然后再用嘴巴吸气，重复以上动作</p><p>注意点：</p><ul><li><p>假如头埋到水里的时候不小心吸进了水，也不要紧张，头出水面的时候，把吸进去的水吐出去就好了</p></li><li><p>头埋下去的时候，由于水的浮力，身体会不由自主的漂起来，这个时候腿部可以用一点力量站稳就可以了</p></li></ul><h5 id="2-漂浮"><a href="#2-漂浮" class="headerlink" title="2.漂浮"></a><strong>2.漂浮</strong></h5><p>憋气换气练习没问题后，就可以练习漂浮了；手抓住池边，吸气低头，将头埋在水中，身体放轻松，让身体自然的漂起来就好</p><p>注意点：</p><ul><li>身体漂起来的时候，手臂要伸直，不要屈肘；这个时候屈肘容易养成不好的习惯，如果这时候屈肘，后面练习蛙泳手的时候也容易屈肘</li></ul><h5 id="3-蛙泳腿练习"><a href="#3-蛙泳腿练习" class="headerlink" title="3.蛙泳腿练习"></a><strong>3.蛙泳腿练习</strong></h5><p>蛙泳腿六字口诀“慢收翻、快蹬夹”，口诀说起来很简单，做标准不容易</p><p>收：慢收，收的时候，大腿不要太往下沉（也就是上身和大腿的角度是钝角，不要收大腿收很多，都呈90度了），只需要把小腿收起来，一定要收紧，脚后跟要尽量贴近屁股；</p><p>翻：收的动作做好之后，脚丫子要勾脚往外翻（也就是脚指头的方向朝外，脚后跟的方向朝内），这里一定要勾脚、勾脚、勾脚（芭蕾一直强调绷脚、绷脚、绷脚，蛙泳腿强调勾脚、勾脚、勾脚，我的脚太难了，所以第一节课，我的脚总是勾不住），做好收翻的动作之后，从后面看，腿部是呈一个W的形状</p><p>蹬夹：蹬夹要合起来做，整个过程要快、快、快，并且要用力蹬夹（我是软绵绵，不知道我的饭吃到哪里去了，芭蕾的肌肉训练训到哪里去了），蹬的过程中注意也要勾脚</p><h5 id="4-蛙泳手练习"><a href="#4-蛙泳手练习" class="headerlink" title="4.蛙泳手练习"></a><strong>4.蛙泳手练习</strong></h5><p>蛙泳手分解动作有4步</p><p>1.身体漂平后（此时，手是双手合十，直臂向前的），双手掌心朝外划开，这里划的距离不要太大，略宽于肩膀即可；</p><p>2.手划开后屈肘抱水，抱水的时候，只是屈肘，大臂不需要做什么动作，小臂折叠，并且掌心要朝自己的身体，手背和小臂是呈一条直线的；</p><p>3.抱水完成后，双手经过自己的胸部两侧合十，注意是胸部两侧，不是胃两侧</p><p>4.双手合十后，双臂伸直，注意这里一定要伸直，不要屈肘</p><p>以上4步熟悉之后，就可以连起来做快一点了，一做快就什么要点都忘了，最容易出问题的就是抱水的时候，手掌心没有朝向自己的身体，幸好我是女孩子，还能尽量保证双手合十的时候，是经过胸部两侧的；</p><h5 id="5-完整蛙泳动作配合练习"><a href="#5-完整蛙泳动作配合练习" class="headerlink" title="5.完整蛙泳动作配合练习"></a><strong>5.完整蛙泳动作配合练习</strong></h5><p>身体漂平之后，开始在水中吐气，头抬起来后，手开始做划水抱水动作（这个动作要用点力气，尽可能把自己的身体撑起来，保证头能抬起来吸到气），同时张嘴吸气，手到胸部两侧准备合十的时候，开始慢收腿，同时将头埋入水中，然后双臂伸直，伸直之后，再开始蹬夹腿</p><h2 id="二、反蛙泳"><a href="#二、反蛙泳" class="headerlink" title="二、反蛙泳"></a><strong>二、反蛙泳</strong></h2><p>准备：吸气，身体平躺在水面上，脖子放松，头微微后仰，漂平后就可以开始做动作了</p><p>腿部动作：腿部动作和蛙泳腿一样，只是要注意这里收腿的时候要收紧（膝盖可以略微高出水面），这样蹬腿的时候就是向后蹬，而不是向下蹬，注意蹬腿的时候要勾脚</p><p>手部动作：手臂张开（手臂要伸直，不要屈肘），手掌往下压然后往后推（这里的后指的是前进方向的反方向），手部动作和腿部动作是同步的</p><h2 id="三、抬头蛙"><a href="#三、抬头蛙" class="headerlink" title="三、抬头蛙"></a><strong>三、抬头蛙</strong></h2><p>腿部动作和蛙泳是一样的，手部动作有点不一样，抬头蛙手部划水的时候，要张臂划开（这里的开度比蛙泳的划水开度要大，不只是略宽于肩膀就可以的），划到身体两侧，然后做抱水，双手合十，双臂伸直的动作即可</p><p>关于抬头蛙换气：换气的时机是在双臂张到最大的时候开始吸气，因为这个时候身体会被双臂撑起来，保证能吸到气</p><h2 id="四、踩水"><a href="#四、踩水" class="headerlink" title="四、踩水"></a><strong>四、踩水</strong></h2><p>手部动作：手臂微微弯曲，不要弯曲的太多，手指并拢，做压水动作</p><p>腿部动作：腿部动作和蛙泳腿类似，只是幅度比蛙泳腿的要小一点，也不需要夹水，收腿的时候，尽量收紧一点，并且要勾脚，蹬腿的时候不要只做后侧的蹬腿，要向前蹬一点（感觉是脚丫子在水中逆时针划了一个圈）；蹬腿完之后不需要“夹”，也就是双腿不需要并拢，再收腿做下一次动作即可</p><p>头部：头部一直保持在水面上，如果要吸气，是在双手压水（可以撑起来一点身体）的时候吸气</p><p>身体：身体可以微微前倾，保持身体平衡</p><h2 id="五、一点感悟"><a href="#五、一点感悟" class="headerlink" title="五、一点感悟"></a><strong>五、一点感悟</strong></h2><p>1.前期动作一定要做标准，不要着急，动作做不标准的前提下，即使呼哧呼哧一直加快动作，也不会有什么提升，反而会越做越错，尽量让自己放轻松，慢下来，想清楚动作并把动作的完成度做到极致</p><p>2.站在干岸上动作练的再好，想得再清楚，不在水里练还是白瞎，所以一定要多练多练，才能有进步；当然，练的过程也要多琢磨琢磨自己的动作，领悟正确的泳姿最重要</p><p>3.完整配合的时候，可能会有点慌乱，这个动作没做对，那个动作也不达标；但是不要想着一次性把所有错误都纠正过来，心急吃不了热豆腐，一次只注意纠正一个动作就好，慢慢练习就可以把错误都纠正过来了</p><p>4.多看自己游泳的视频，能很直观的感受的自己的错误在哪，所以后续练习也可以让小伙伴们拍拍视频，自己多琢磨琢磨</p><p>5.沟通很重要，有问题要及时和教练沟通，当然前提是自己要有思考，只有把自己的疑惑都解决了，才能进步得更快</p><p>6.游泳真是一项能让人很快乐的运动，不会有汗流浃背，身上黏糊糊感觉，如果我游得再美一点，游泳就快超过芭蕾在我心目中的地位了</p><p>7.泳池中的小朋友也很可爱，今天上最后一节课时，遇到一个小男孩，说我和他的爸爸一样高，要和我比憋气，还要和我比谁游得快，还给我教在深水区怎么自救的办法，哈哈哈，后来我换了一个泳道，他横穿泳道要来我这边和我一起玩，结果被救生员警告了一下，被他妈妈喊回去了～～和小孩子一起玩真是一件幸福的事情呐😊</p><p>最后记录下自己最后一节课的速度：50m，2分15秒，希望3个月后可以游进2分钟内。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;一、蛙泳&quot;&gt;&lt;a href=&quot;#一、蛙泳&quot; class=&quot;headerlink&quot; title=&quot;一、蛙泳&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、蛙泳&lt;/strong&gt;&lt;/h2&gt;&lt;h5 id=&quot;1-憋气换气&quot;&gt;&lt;a href=&quot;#1-憋气换气&quot; c
      
    
    </summary>
    
    
      <category term="健身" scheme="https://liupei.link/tags/%E5%81%A5%E8%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>晒太阳</title>
    <link href="https://liupei.link/2020/12/19/%E6%99%92%E5%A4%AA%E9%98%B3/"/>
    <id>https://liupei.link/2020/12/19/晒太阳/</id>
    <published>2020-12-19T15:33:08.000Z</published>
    <updated>2020-12-27T15:19:35.876Z</updated>
    
    <content type="html"><![CDATA[<p>南方的冬天真的是起床困难，昨天早上闹钟响起，顺手关了闹钟，早餐又想吃烤红薯了，不能赖床了，可是被窝真的好暖，外面很冷，先伸出一个脚丫子，好冷，再伸出一条胳膊，还是好冷，索性一把掀开被子，麻溜穿上毛绒绒的睡衣，成功起床。</p><p>拉开窗帘，阳光照了进来，感觉好久没有出太阳了，真庆幸今天没赖床，不然阳光要悄悄从阳台溜走了。洗好红薯放进烤箱，坐在沙发上，阳光刚好照在我身上，不一会，烤箱散发出烤红薯的香味，我感到十分温暖、平静。想起以前上学，每次到冬天，课间休息的时候，大家在教室外面站一排排晒太阳，可惜课间时间太短，晒不够，上课铃声响起，大家都要不情不愿的走进冷冰冰的教室。不知道以前一起晒太阳的同学们现在都怎么样了，不知道大家在冬天晒到暖暖的太阳的时候是不是也会想起以前上学时和同学们一起晒太阳的时光～</p><p>顾城说：</p><p>我多么希望，有一个门口 </p><p>早晨，阳光照在草上</p><p>我们站着</p><p>扶着自己的门扇</p><p>门很低，但太阳是明亮的</p><p>草在结它的种子</p><p>风在摇它的叶子</p><p>我们站着，不说话</p><p>就十分美好</p><p><br></p><p>我也希望：</p><p>有一个冬日的早晨</p><p>阳光暖暖的</p><p>我们静静地坐着</p><p>晒着太阳</p><p>就十分美好</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;南方的冬天真的是起床困难，昨天早上闹钟响起，顺手关了闹钟，早餐又想吃烤红薯了，不能赖床了，可是被窝真的好暖，外面很冷，先伸出一个脚丫子，好冷，再伸出一条胳膊，还是好冷，索性一把掀开被子，麻溜穿上毛绒绒的睡衣，成功起床。&lt;/p&gt;
&lt;p&gt;拉开窗帘，阳光照了进来，感觉好久没有出太
      
    
    </summary>
    
    
      <category term="说说" scheme="https://liupei.link/tags/%E8%AF%B4%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>时间管理</title>
    <link href="https://liupei.link/2020/12/19/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    <id>https://liupei.link/2020/12/19/时间管理/</id>
    <published>2020-12-19T13:10:13.000Z</published>
    <updated>2020-12-27T15:19:12.911Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>时间管理，对外管理事务、管理合作关系，对内管理自己；时间管理的本质是“提高工作效率”。</p><h4 id="一、做好计划"><a href="#一、做好计划" class="headerlink" title="一、做好计划"></a><strong>一、做好计划</strong></h4><h5 id="1-计划的两个基本功能"><a href="#1-计划的两个基本功能" class="headerlink" title="1.计划的两个基本功能"></a><strong>1.计划的两个基本功能</strong></h5><ul><li>规划：制定出实现目标的有效路径</li><li>备忘：执行时方向清晰、全情投入</li></ul><p>计划不仅是要在头脑中构思，还要将计划可视化，也就是将计划落实在纸面上</p><h5 id="2-极简的项目管理表：从事情出发，规划行动步骤，分析项目并制定截止日期"><a href="#2-极简的项目管理表：从事情出发，规划行动步骤，分析项目并制定截止日期" class="headerlink" title="2.极简的项目管理表：从事情出发，规划行动步骤，分析项目并制定截止日期"></a><strong>2.极简的项目管理表：从事情出发，规划行动步骤，分析项目并制定截止日期</strong></h5><ul><li>按项目的工作内容属性拆分</li><li>按项目的阶段属性拆分</li></ul><p>注意点：</p><ul><li>不要把工作和时间点拆得过细，时间颗粒度一般是计划周期的下两级（比如计划周期是季度，那时间颗粒度拆分到星期比较合适）</li><li>项目分拆不重不漏（MECE原则）</li><li>分拆颗粒度责任到人</li><li>设置截止日期</li><li>识别关系人，给关系人设置截止日期，并设置进度表</li></ul><h5 id="3-日历表：从时间维度锁定重要的事情"><a href="#3-日历表：从时间维度锁定重要的事情" class="headerlink" title="3.日历表：从时间维度锁定重要的事情"></a><strong>3.日历表：从时间维度锁定重要的事情</strong></h5><p>（1）重要的事情先安排，如果识别重要的事情呢？</p><ul><li>短期可以完成的，对工作结果有影响的</li><li>短期对工作无明显帮助，但一旦完成，有巨大红利的</li></ul><p>（2）好的计划是有一定余地和缓冲的，留20%的缓冲地带</p><h4 id="二、把时间变成产出"><a href="#二、把时间变成产出" class="headerlink" title="二、把时间变成产出"></a><strong>二、把时间变成产出</strong></h4><h5 id="1-工作推进的5个原则"><a href="#1-工作推进的5个原则" class="headerlink" title="1.工作推进的5个原则"></a><strong>1.工作推进的5个原则</strong></h5><ul><li>确保不中断的时间段：很多工作一旦中断，再重新开始就需要花费很多的时间和精力</li><li>当下主义和应急措施：工作要在发生的当下处理完，当工作被打断时要有一定的应急措施，比如将当下没有处理完的文件放在一个固定的文件夹中，以便过一段时间重启时能对接得上</li><li>以拙速为宗旨：不要太过追求完美，先完成一定阶段的任务。如果有时间，再进一步完善就好</li><li>偶尔休息：放松放松，再回过头来那些棘手的问题，说不定就有新的思路了</li><li>先做不确定的事情：前提是手头事情的优先级都一样，比如去比较远的地方参加聚会，就应该到了目的地之后再吃饭，而不是吃完饭之后再出门。如果中途遇到交通堵塞，我们可以不吃饭；如果到达的时间比预定的时间早，我们就可以不慌不忙地吃饭</li></ul><h5 id="2-解决“拖延症“，将复杂任务拆分成简单动作的4字口诀"><a href="#2-解决“拖延症“，将复杂任务拆分成简单动作的4字口诀" class="headerlink" title="2.解决“拖延症“，将复杂任务拆分成简单动作的4字口诀"></a><strong>2.解决“拖延症“，将复杂任务拆分成简单动作的4字口诀</strong></h5><ul><li>转：可以授权给别人的，不应该由自己处理的事情，转出去</li><li>做：一个工作只有2~3min时间就可以完成，马上去做，不要让这些小的事情占大脑内存</li><li>存：暂时不做的，优先级较低的，先放入代办清单</li><li>扔：不做的事情，从代办中移除，不要让大脑被琐事占据</li></ul><h4 id="三、敏捷工作法"><a href="#三、敏捷工作法" class="headerlink" title="三、敏捷工作法"></a><strong>三、敏捷工作法</strong></h4><h5 id="1-四个时间管理算法"><a href="#1-四个时间管理算法" class="headerlink" title="1.四个时间管理算法"></a><strong>1.四个时间管理算法</strong></h5><ul><li><p>最近截止时间算法：如果每个任务都是有截止日期的，按照截止日期的先后顺序来完成</p></li><li><p>摩尔算法：当你手头有很多任务，每个任务又都有自己的截止时间，如果很明确在截止日期前完不成所有的任务，那就要尽可能多的完成任务，即放弃占用时间最长的任务</p></li><li><p>小事优先原则：都不是急事的前提下，小事优先</p></li><li><p>加权最短时间处理算法：每个任务都有截止时间，每个任务的重要程度都不一样，密度高者优先</p></li></ul><p>任务密度=任务的重要程度/完成时间</p><p>这是一种量化思想，用自己的标准给任务设值</p><h5 id="2-快速工作法：一种不断迭代的工作方式（最小可交付、持续迭代）"><a href="#2-快速工作法：一种不断迭代的工作方式（最小可交付、持续迭代）" class="headerlink" title="2.快速工作法：一种不断迭代的工作方式（最小可交付、持续迭代）"></a><strong>2.快速工作法：一种不断迭代的工作方式（最小可交付、持续迭代）</strong></h5><ul><li><p>建立交付意识：输入—&gt;处理—&gt;交付</p></li><li><p>计划交付节点：前紧后松</p></li><li><p>多个项目并行：重要的事情多迭代，紧急的事情先迭代</p></li><li><p>不主张同时做多件事</p></li></ul><h4 id="四、学会与忙碌相处"><a href="#四、学会与忙碌相处" class="headerlink" title="四、学会与忙碌相处"></a><strong>四、学会与忙碌相处</strong></h4><p>忙碌的人，行动力和执行力越强，忙碌是一种自驱模式，带来成就感和满足感</p><p>三个建议：</p><p>1.找到处于自己的目标：发自内心喜欢的，内心想要的“胜利目标”，给自己带来大的动力</p><ul><li>挑战舒适区</li><li>开创新领域</li></ul><p>2.给成长留出足够的投入：建议一年至少留出200h，用户锻炼和能力提升，在学习上敢于投入金钱，投入让自己心疼的钱，获取能带来意想不到的提升</p><p>3.跑出一个小循环，制造机会让自己尝到甜头</p><p>4.自我驱动：把自己学到的某个技能可以立刻运用到工作中，“现学现卖”，找到最小的一个尝试机会，自己想要什么是逐渐试出来的</p><h4 id="五、管理合作者的时间"><a href="#五、管理合作者的时间" class="headerlink" title="五、管理合作者的时间"></a><strong>五、管理合作者的时间</strong></h4><h5 id="1-学会与人合作"><a href="#1-学会与人合作" class="headerlink" title="1.学会与人合作"></a><strong>1.学会与人合作</strong></h5><ul><li>开放透明：养成透明的工作习惯</li><li>互相负责：对上和对下的时间管理</li></ul><h5 id="2-三个透明的沟通习惯"><a href="#2-三个透明的沟通习惯" class="headerlink" title="2.三个透明的沟通习惯"></a><strong>2.三个透明的沟通习惯</strong></h5><ul><li>计划共享：在制定计划的时候就把大家拉进来，让大家有参与感</li><li>实时同步：主动推销自己的工作，帮助调度，协调资源</li><li>当前沟通</li></ul><h5 id="3-管理上级的时间"><a href="#3-管理上级的时间" class="headerlink" title="3.管理上级的时间"></a>3.<strong>管理上级的时间</strong></h5><ul><li>主动固定下来和上级一对一沟通的时间</li><li>利用项目管理表，定期和上级汇报项目、任务进度</li><li>汇报内容：工作重点、优先级排序、项目进展汇报、风险预警</li></ul><h5 id="4-管理自己和下属的时间"><a href="#4-管理自己和下属的时间" class="headerlink" title="4.管理自己和下属的时间"></a><strong>4.管理自己和下属的时间</strong></h5><p>充分授权给下属，人的成长是需要有具体的事情做载体的</p><p>参考：</p><p><a href="http://www.360doc.cn/mip/718855396.html" target="_blank" rel="noopener">http://www.360doc.cn/mip/718855396.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;时间管理，对外管理事务、管理合作关系，对内管理自己；时间管理的本质是“提高工作效率”。&lt;/p&gt;
&lt;h4 id=&quot;一、做好计划&quot;&gt;&lt;a href=&quot;#一、做好计划&quot; class=&quot;headerlink&quot; title=&quot;一、做好计划&quot;&gt;&lt;/a&gt;&lt;str
      
    
    </summary>
    
    
      <category term="效能提升" scheme="https://liupei.link/tags/%E6%95%88%E8%83%BD%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>芭蕾扶把动作换反面，从哪一侧向后转？</title>
    <link href="https://liupei.link/2020/12/18/%E8%8A%AD%E8%95%BE%E6%89%B6%E6%8A%8A%E5%8A%A8%E4%BD%9C%E6%8D%A2%E5%8F%8D%E9%9D%A2%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%8E%E6%8A%8A%E6%9D%86%E7%9A%84%E6%96%B9%E5%90%91%E5%90%91%E5%90%8E%E8%BD%AC%EF%BC%9F/"/>
    <id>https://liupei.link/2020/12/18/芭蕾扶把动作换反面，为什么从把杆的方向向后转？/</id>
    <published>2020-12-18T15:29:02.000Z</published>
    <updated>2020-12-18T15:57:17.125Z</updated>
    
    <content type="html"><![CDATA[<p>芭蕾课堂上，通常先左手扶把杆做动作，做完之后要转身换右手扶把杆做动作，这个时候问题来了，应该从哪个方向往后转呢？</p><p>答案是：从面向把杆的一侧向后转</p><p>为什么要从把杆的一侧向后转呢？芭蕾的起源于意大利，兴盛于法国，前身是宫廷社交礼仪舞蹈，想象一下自己穿着斯嘉丽去十二橡树园参加宴会时穿的那条👗（好吧，乱世佳人讲的也不是发生在法国的事情，我只是很喜欢斯嘉丽的裙子，所以就举个例子吧）并和自己的喜欢的人牵着手，如果裙子是拖尾的话，向后转是不是要面向着人家向后转呢？要是背对着人家向后转，人家就会踩到你的裙子～并且从里面向后转还能趁机近距离看帅哥（感觉有点猥琐是怎么回事）</p><p>比较正经的说法是：在那个年代，臀部对着舞伴，不太礼貌</p><p>不管怎么说，这个已经是芭蕾课堂的一条规则，千万不要转错了呀</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;芭蕾课堂上，通常先左手扶把杆做动作，做完之后要转身换右手扶把杆做动作，这个时候问题来了，应该从哪个方向往后转呢？&lt;/p&gt;
&lt;p&gt;答案是：从面向把杆的一侧向后转&lt;/p&gt;
&lt;p&gt;为什么要从把杆的一侧向后转呢？芭蕾的起源于意大利，兴盛于法国，前身是宫廷社交礼仪舞蹈，想象一下自己穿
      
    
    </summary>
    
    
      <category term="芭蕾" scheme="https://liupei.link/tags/%E8%8A%AD%E8%95%BE/"/>
    
  </entry>
  
  <entry>
    <title>演绎推理和归纳推理</title>
    <link href="https://liupei.link/2020/12/17/%E6%BC%94%E7%BB%8E%E6%8E%A8%E7%90%86%E5%92%8C%E5%BD%92%E7%BA%B3%E6%8E%A8%E7%90%86/"/>
    <id>https://liupei.link/2020/12/17/演绎推理和归纳推理/</id>
    <published>2020-12-17T15:49:56.000Z</published>
    <updated>2021-01-07T14:27:49.601Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>学习了下演绎推理和归纳推理，发现很多时候我们不经意间的一句话，其实底层逻辑都用到了演绎/归纳推理</p><h4 id="演绎推理"><a href="#演绎推理" class="headerlink" title="演绎推理"></a><strong>演绎推理</strong></h4><h5 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a><strong>1.概念</strong></h5><p>演绎推理是从普遍性的理论和知识出发，去识别个别的、特殊的现象的一种论证推理方法；也就是以客观规律为依据，从已知部分，推得未知部分</p><h5 id="2-如何进行演绎推理呢？"><a href="#2-如何进行演绎推理呢？" class="headerlink" title="2.如何进行演绎推理呢？"></a><strong>2.如何进行演绎推理呢？</strong></h5><p>标准式：大前提—&gt;小前提—&gt;结论</p><p>eg：所有人都会死—&gt;秦始皇是人—&gt;所以秦始皇也会死</p><p>常见式：现象—&gt;原因—&gt;解决方案</p><p>eg：空气污染指数上升—&gt;工厂排放大量污染物—&gt;加强对工厂的监督</p><h5 id="3-演绎推理的利弊"><a href="#3-演绎推理的利弊" class="headerlink" title="3.演绎推理的利弊"></a><strong>3.演绎推理的利弊</strong></h5><p>好处：演绎推理的结果具有“必然性”，因此说服力较强</p><p>缺点：容易以偏概全</p><h4 id="归纳推理"><a href="#归纳推理" class="headerlink" title="归纳推理"></a><strong>归纳推理</strong></h4><h5 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a><strong>1.概念</strong></h5><p>归纳推理是从许多个别的事物中概括出一般性概念、原则或结论的推理方法；</p><h5 id="2-如何进行归纳推理"><a href="#2-如何进行归纳推理" class="headerlink" title="2.如何进行归纳推理"></a><strong>2.如何进行归纳推理</strong></h5><p>先把结论、观点亮出来</p><p>f根据结论再去寻找支撑结论的理由和要素</p><p>用MECE原则（不重、不漏）检查归纳推理</p><h4 id="记一次有趣的聊天"><a href="#记一次有趣的聊天" class="headerlink" title="记一次有趣的聊天"></a><strong>记一次有趣的聊天</strong></h4><p>简单说一个有趣的我和朋友聊天时候的场景：</p><p>我：深圳的空调都不带制热的（潜台词：我现在住的房子的空调不制热）</p><p>朋友：我记得我之前住的房子的空调是有制热的</p><p>然后我晚上回家试了下，我现在住的房子的空调也是有制热功能的。。。</p><p>其实上面这个聊天场景就用到了演绎推理和归纳推理</p><p>1.我为什么会得出深圳的空调都不带制热的这个结论呢？（归纳推理）</p><p>因为我之前住过的3个地方的空调都不带制热，所以我得出这个结论的过程是这样的</p><p>A房子的空调不制热、B房子的空调不制热、C房子的空调不制热，从这3个现象我抽出来一个共性，ABC都在深圳，所以我得出了一个深圳地区的空调不制热的结论</p><p>2.我为什么会觉得我现在住的房子的空调也不制热呢？（演绎推理）</p><p>深圳的空调都不制热（大前提）—&gt;我现在住的房子在深圳（小前提）—&gt;所以我现在住的房子的空调也不制热（结论）</p><p>很明显，我最终的结论是错误的，原因是我的大前提就是错的。联想到前几天看到的一个新闻，一个不幸患了癌症的留学生在vlog上记录自己抗癌了过程，由于博主的身体“看上去”不像身患癌症，因此然后底下有很多恶评，说博主骗人，根本没患病，很遗憾，最终这位博主没能战胜病魔，去世了。要是大家在发表言论时，多多反思下自己的言论背后的逻辑是否是正确就好了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;学习了下演绎推理和归纳推理，发现很多时候我们不经意间的一句话，其实底层逻辑都用到了演绎/归纳推理&lt;/p&gt;
&lt;h4 id=&quot;演绎推理&quot;&gt;&lt;a href=&quot;#演绎推理&quot; class=&quot;headerlink&quot; title=&quot;演绎推理&quot;&gt;&lt;/a&gt;&lt;stro
      
    
    </summary>
    
    
      <category term="思维提升" scheme="https://liupei.link/tags/%E6%80%9D%E7%BB%B4%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>问题分析与解决</title>
    <link href="https://liupei.link/2020/11/25/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    <id>https://liupei.link/2020/11/25/问题解决与分析/</id>
    <published>2020-11-25T15:40:24.000Z</published>
    <updated>2021-01-07T14:27:44.727Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>在日常生活中遇到问题的时候，一般都是凭经验去思考如何解决这个问题；但是往往因为经验的不足，或者因为环境的变化，以前的经验早已不适用，导致问题没有得到解决；那有没有一个方法能指导我们去分析&amp;解决问题，而不是仅凭经验的判断呢？</p><h4 id="一、问题分析的3个原则"><a href="#一、问题分析的3个原则" class="headerlink" title="一、问题分析的3个原则"></a><strong>一、问题分析的3个原则</strong></h4><h5 id="1-基于事实分析"><a href="#1-基于事实分析" class="headerlink" title="1.基于事实分析"></a><strong>1.基于事实分析</strong></h5><p>基于事实分析可以弥补经验的不足，增加方案的可信度</p><h5 id="2-结构化分析"><a href="#2-结构化分析" class="headerlink" title="2.结构化分析"></a><strong>2.结构化分析</strong></h5><p>遵从MECE法则（相互独立，完全穷尽）：对问题做到不重叠，不遗漏的分析，能够把握问题的核心，成为有效解决方案</p><h5 id="3-以假设为导向"><a href="#3-以假设为导向" class="headerlink" title="3.以假设为导向"></a><strong>3.以假设为导向</strong></h5><p>大胆假设，小心求证，找到真相产生的条件</p><h4 id="二、问题分析的4个步骤"><a href="#二、问题分析的4个步骤" class="headerlink" title="二、问题分析的4个步骤"></a><strong>二、问题分析的4个步骤</strong></h4><p>拆解和定位问题：80%</p><p>解决方案：20%</p><h5 id="1-明确和理解问题"><a href="#1-明确和理解问题" class="headerlink" title="1.明确和理解问题"></a><strong>1.明确和理解问题</strong></h5><p>遇到问题：先搞清楚问题的本质是什么</p><p>如果明确需求：</p><ul><li>找出需求方关心的点</li><li>明确目标（不同的目标，不同的解决方案）</li><li>明确解决问题需要的资源</li></ul><h5 id="2-拆分和定位问题"><a href="#2-拆分和定位问题" class="headerlink" title="2.拆分和定位问题"></a><strong>2.拆分和定位问题</strong></h5><ul><li><p>复杂问题拆分到最小问题（纵向拆分原则）</p><p>复杂问题：掺杂了多个维度和变量的问题，不可直接解决，因此要先进行拆解</p><p>最小问题：最本质，最细微的待解决问题</p><p>把很小的目标融会贯通，用更高层的思维要求自己，找到问题的价值链，找到内部逻辑，确定核心最小问题</p></li><li><p>MECE法则（横向拆分原则）</p><p>搭建逻辑结构：想问题的时候有一条线，不是漫无目的（核心问题和起始问题；问题原因；问题后果；画树；补充）</p></li><li><p>价值链思维（商业问题的最佳拆解模式）</p><p>抓住问题本质并用极简的形式描述出来</p></li><li><p>逻辑树（呈现形式）</p><p>图形化思考</p></li><li><p>假设验证（定位问题）</p><p>假设验证：能够明确目标（证实，证伪），省时省力</p></li></ul><h5 id="3-提出解决方案"><a href="#3-提出解决方案" class="headerlink" title="3.提出解决方案"></a><strong>3.提出解决方案</strong></h5><ul><li>假设验证：MECE原则</li><li>验证结果：果汁稀释法</li></ul><h5 id="4-总结问题"><a href="#4-总结问题" class="headerlink" title="4.总结问题"></a><strong>4.总结问题</strong></h5><ul><li>别人觉得是对的，比自己认为是对的更重要</li><li>从结论不断分析，直到那个不可辩驳的事实</li><li>每一个层级都要控制要点的数目，要突出重点</li></ul><h4 id="三、补充"><a href="#三、补充" class="headerlink" title="三、补充"></a><strong>三、补充</strong></h4><h5 id="1-对信息进行3级分类"><a href="#1-对信息进行3级分类" class="headerlink" title="1.对信息进行3级分类"></a><strong>1.对信息进行3级分类</strong></h5><p>不完备或者逻辑不正确，可能是假信息</p><p>总结问题的时候，先说<strong>结论</strong>，再说<strong>理由</strong>（论据），最后列举出<strong>事实</strong>（案例，支撑论据，证明结论）</p><h5 id="2-结构化分析的方法和工具"><a href="#2-结构化分析的方法和工具" class="headerlink" title="2.结构化分析的方法和工具"></a><strong>2.结构化分析的方法和工具</strong></h5><ul><li>最小问题</li><li>价值链思维</li><li>逻辑树</li><li>MECE原则</li></ul><p>MECE的5种分法：二分法、过程法、要素法、公式法、矩阵法</p><h5 id="3-常见思维工具模型"><a href="#3-常见思维工具模型" class="headerlink" title="3.常见思维工具模型"></a><strong>3.常见思维工具模型</strong></h5><p>SWOT</p><p>ADDT</p><p>4P</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;在日常生活中遇到问题的时候，一般都是凭经验去思考如何解决这个问题；但是往往因为经验的不足，或者因为环境的变化，以前的经验早已不适用，导致问题没有得到解决；那有没有一个方法能指导我们去分析&amp;amp;解决问题，而不是仅凭经验的判断呢？&lt;/p&gt;
&lt;h4 
      
    
    </summary>
    
    
      <category term="效能提升" scheme="https://liupei.link/tags/%E6%95%88%E8%83%BD%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>keep瘦腿训练</title>
    <link href="https://liupei.link/2020/11/25/Keep%E7%98%A6%E8%85%BF%E8%AE%AD%E7%BB%83/"/>
    <id>https://liupei.link/2020/11/25/Keep瘦腿训练/</id>
    <published>2020-11-25T15:36:16.000Z</published>
    <updated>2020-12-27T15:18:50.748Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>记录下自己keep瘦腿训练的成果吧：连续训练了30d，大腿围从54cm瘦到了51cm，后面再继续练，就没再继续瘦了，估计3cm就已经达到我的极限了，毕竟也本身也不是很胖，嘿嘿～</p><h5 id="1-做的是keep上的哪个课程，什么情况适合这个课程"><a href="#1-做的是keep上的哪个课程，什么情况适合这个课程" class="headerlink" title="1.做的是keep上的哪个课程，什么情况适合这个课程"></a><strong>1.做的是keep上的哪个课程，什么情况适合这个课程</strong></h5><p>就是keep官方的“瘦腿训练”课程啦，K2难度；主要针对跑步、走路等因为腿部和臀部的发力不正确导致的本应该臀部发力，但是最终由腿部代偿引起的假胯宽、大腿粗等问题</p><h5 id="2-需要每天做吗，一天做几次？"><a href="#2-需要每天做吗，一天做几次？" class="headerlink" title="2.需要每天做吗，一天做几次？"></a><strong>2.需要每天做吗，一天做几次？</strong></h5><p>需要每天做，一天做一次就可以啦</p><h5 id="3-训练的注意事项？"><a href="#3-训练的注意事项？" class="headerlink" title="3.训练的注意事项？"></a><strong>3.训练的注意事项？</strong></h5><p>“侧卧左侧抬腿”动作：做动作的那条腿伸直、可以稍微内旋一点、身体向下倾斜45度左右、脚尖向下，重点训练臀中肌；动力腿内旋 &amp; 身体倾斜45度是精髓，因为这样能更好的练到臀部</p><p>“侧卧后踢腿”动作：重点在于“后”踢，踢的时候脚尖也要向下，重点也是训练臀部肌肉；如果不确定自己是否踢到位了，可以找一个参照物，比如每次后踢都要挨到冰箱才算踢到位</p><h5 id="4-生理期期间要不要做？"><a href="#4-生理期期间要不要做？" class="headerlink" title="4.生理期期间要不要做？"></a><strong>4.生理期期间要不要做？</strong></h5><p>训练中有关于腹部训练的动作，生理期期间可以跳过，但是腿部的训练可以做</p><h5 id="5-要一直做吗，会一直做一直瘦吗？"><a href="#5-要一直做吗，会一直做一直瘦吗？" class="headerlink" title="5.要一直做吗，会一直做一直瘦吗？"></a><strong>5.要一直做吗，会一直做一直瘦吗？</strong></h5><p>课程设计师建议是连续做两个月，再继续做也不会更瘦了；准确的来说，这是一组“练习”，不是“训练”，所以效果有限，这套课程只是让本来应该发力的肌肉通过频繁的练习，让它能正确的发力而已</p><p>最后：</p><p>管住嘴更容易呢？还是迈开腿更容易？</p><p>嗯～还是尽量管住嘴吧</p><p>不过～通过自己的练习，达到自己预期的效果，还是成就感满满，呀呼～～～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;记录下自己keep瘦腿训练的成果吧：连续训练了30d，大腿围从54cm瘦到了51cm，后面再继续练，就没再继续瘦了，估计3cm就已经达到我的极限了，毕竟也本身也不是很胖，嘿嘿～&lt;/p&gt;
&lt;h5 id=&quot;1-做的是keep上的哪个课程，什么情况适合这
      
    
    </summary>
    
    
      <category term="健身" scheme="https://liupei.link/tags/%E5%81%A5%E8%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>夜雨</title>
    <link href="https://liupei.link/2020/11/23/%E5%A4%9C%E9%9B%A8/"/>
    <id>https://liupei.link/2020/11/23/夜雨/</id>
    <published>2020-11-23T15:36:17.000Z</published>
    <updated>2020-12-16T14:41:22.561Z</updated>
    
    <content type="html"><![CDATA[<p>[唐]白居易</p><p>我有所念人，隔在远远乡。</p><p>我有所感事，结在深深肠。</p><p>乡远去不得，无日不瞻望。</p><p>肠深解不得，无夕不思量。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[唐]白居易&lt;/p&gt;
&lt;p&gt;我有所念人，隔在远远乡。&lt;/p&gt;
&lt;p&gt;我有所感事，结在深深肠。&lt;/p&gt;
&lt;p&gt;乡远去不得，无日不瞻望。&lt;/p&gt;
&lt;p&gt;肠深解不得，无夕不思量。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="说说" scheme="https://liupei.link/tags/%E8%AF%B4%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>k8s容器健康检查</title>
    <link href="https://liupei.link/2020/08/16/k8s%E5%AE%B9%E5%99%A8%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/"/>
    <id>https://liupei.link/2020/08/16/k8s容器健康检查/</id>
    <published>2020-08-16T06:43:53.000Z</published>
    <updated>2020-12-27T15:18:30.121Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h4 id="k8s容器检查探针"><a href="#k8s容器检查探针" class="headerlink" title="k8s容器检查探针"></a><strong>k8s容器检查探针</strong></h4><p>当容器部署在k8s中的时候，k8s通过 liveness probe 和 readiness probe来监测容器的健康状况，其中liveness probe 和 readiness probe是由容器所在node上的kubelet定期执行的，那关于iveness probe  和 readiness probe分别有以下几个问题</p><h5 id="liveness-probe"><a href="#liveness-probe" class="headerlink" title="liveness probe"></a><strong>liveness probe</strong></h5><p>1.如何理解”存活“状态？</p><p>2.容器配置了存活探针和没有配置存活探针有什么区别？</p><p>3.存活探针有哪几种探测方式？分别是如何配置和如何工作的？</p><p>4.如果存活探针探测失败会采取什么策略？</p><h5 id="readiness-probe"><a href="#readiness-probe" class="headerlink" title="readiness probe"></a><strong>readiness probe</strong></h5><p>1.如何理解”就绪“状态？</p><p>2.容器配置了就绪探针和没有配置就绪探针有什么区别？</p><p>3.就绪探针有哪几种探测方式？分别是如何配置和如何工作的？</p><p>4.如果就绪探针探测失败会采取什么策略？</p><h4 id="liveness-probe-1"><a href="#liveness-probe-1" class="headerlink" title="liveness probe"></a><strong>liveness probe</strong></h4><h5 id="1-如何理解容器的“存活”状态？"><a href="#1-如何理解容器的“存活”状态？" class="headerlink" title="1.如何理解容器的“存活”状态？"></a><strong>1.如何理解容器的“存活”状态？</strong></h5><p>容器存活，指的是容器可以在虚拟机上运行，但是这并不意味着容器已经可以提供服务。</p><h5 id="2-什么样的容器需要配置存活探针？容器配置了存活探针和没有配置存活探针有什么区别？"><a href="#2-什么样的容器需要配置存活探针？容器配置了存活探针和没有配置存活探针有什么区别？" class="headerlink" title="2.什么样的容器需要配置存活探针？容器配置了存活探针和没有配置存活探针有什么区别？"></a><strong>2.什么样的容器需要配置存活探针？容器配置了存活探针和没有配置存活探针有什么区别？</strong></h5><p>如果容器中的进程能够在遇到问题或者不健康的情况下自行崩溃，那么就需要配置一个存活探针，来让k8s监测容器的健康状况；而不是以docker返回的容器的状态作为依据</p><h5 id="3-存活探针有哪几种探测方式？分别是如何工作的？"><a href="#3-存活探针有哪几种探测方式？分别是如何工作的？" class="headerlink" title="3.存活探针有哪几种探测方式？分别是如何工作的？"></a><strong>3.存活探针有哪几种探测方式？分别是如何工作的？</strong></h5><p>容器所在节点上的kubelet调用handler（处理程序）对容器进行探测</p><p>handler有以下三种类型:</p><ul><li>ExecAction:在容器内执行指定命令，如果命令退出时的返回码为0，则表示探测成功；反之表示探测失败</li><li>TCPSocketAction:对容器IP地址上的指定端口进行TCP检查，如果端口打开，则表示探测成功；反之表示探测失败</li><li>HTTPGetAction:对容器IP地址上指定端口和路径执行HTTP Get请求，如果响应的状态码大于等于200，且小于400，则表示探测成功；反之表示探测失败</li></ul><p>如何配置3种类型的探针</p><ul><li>ExecAction</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    test: liveness</span><br><span class="line">  name: test-liveness-exec</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: liveness</span><br><span class="line">    image: busybox</span><br><span class="line">    args:</span><br><span class="line">    - /bin/sh</span><br><span class="line">    - -c</span><br><span class="line">    - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600</span><br><span class="line">    livenessProbe: //存活探针</span><br><span class="line">      exec: //探针类型为ExecAction</span><br><span class="line">        command: //指定命令</span><br><span class="line">        - cat</span><br><span class="line">        - /tmp/healthy</span><br><span class="line">      initialDelaySeconds: 5 //容器启动后5s后开始执行命令进行探测</span><br><span class="line">      periodSeconds: 5  //此后每隔5s探测一次</span><br></pre></td></tr></table></figure><ul><li>TCPSocketAction</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: probe-tcp</span><br><span class="line">  namespace: coocla</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    livenessProbe: //存活探针</span><br><span class="line">      initialDelaySeconds: 5 //容器启动后5s后开始执行命令进行探测</span><br><span class="line">      timeoutSeconds: 1 //此后每隔1s探测一次</span><br><span class="line">      tcpSocket: //探针类型为TCPSocketAction</span><br><span class="line">        port: 80 //探测的端口</span><br></pre></td></tr></table></figure><ul><li>HTTPGetAction</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: probe-http</span><br><span class="line">  namespace: coocla</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    livenessProbe: //存活探针</span><br><span class="line">      httpGet: //探针类型为HTTPGetAction</span><br><span class="line">        path: //探测的路径</span><br><span class="line">        port: 80  //探测的端口</span><br><span class="line">        host: www.baidu.com //探测的url</span><br><span class="line">        scheme: HTTPS //协议是https</span><br><span class="line">      initialDelaySeconds: 5 //容器启动后5s后开始执行命令进行探测</span><br><span class="line">      timeoutSeconds: 1 //此后每隔5s探测一次</span><br></pre></td></tr></table></figure><p>每次探测都会得到以下3种结果：</p><ul><li>success:容器通过了探测</li><li>failure:容器未通过探测</li><li>unknown:诊断失败，不会对容器采取任何措施</li></ul><h5 id="4-如果存活探针探测失败会采取什么策略？"><a href="#4-如果存活探针探测失败会采取什么策略？" class="headerlink" title="4.如果存活探针探测失败会采取什么策略？"></a><strong>4.如果存活探针探测失败会采取什么策略？</strong></h5><p>如果存活探针探测失败，则表示kubelet会将该容器kill掉，然后再根据容器的RestarPolicy进行下一步操作</p><p>每一个容器都可以重启策略（RestarPolicy），RestarPolicy有三种选项可以选择：</p><ul><li>Always（默认值）：只要container退出就重新启动</li><li>Onfailure：当container非正常退出后重新启动</li><li>never：从不重启container</li></ul><h4 id="readiness-probe-1"><a href="#readiness-probe-1" class="headerlink" title="readiness probe"></a><strong>readiness probe</strong></h4><h5 id="1-如何理解容器的“就绪”状态？"><a href="#1-如何理解容器的“就绪”状态？" class="headerlink" title="1.如何理解容器的“就绪”状态？"></a><strong>1.如何理解容器的“就绪”状态？</strong></h5><p>容器就绪表示container是否以及处于可接受service的请求了</p><h5 id="2-什么样的容器需要配置存活探针？容器配置了就绪探针和没有配置就绪探针有什么区别？"><a href="#2-什么样的容器需要配置存活探针？容器配置了就绪探针和没有配置就绪探针有什么区别？" class="headerlink" title="2.什么样的容器需要配置存活探针？容器配置了就绪探针和没有配置就绪探针有什么区别？"></a><strong>2.什么样的容器需要配置存活探针？容器配置了就绪探针和没有配置就绪探针有什么区别？</strong></h5><p>就绪态探针的存在意味着 Pod 将在启动阶段不接收任何数据，并且只有在探针探测成功后才开始接收数据，所以如果你的容器需要加载大规模的数据、配置文件或者在启动期间执行迁移操作，可以添加一个就绪探针。</p><h5 id="3-存活探针有哪几种探测方式？分别是如何工作的？-1"><a href="#3-存活探针有哪几种探测方式？分别是如何工作的？-1" class="headerlink" title="3.存活探针有哪几种探测方式？分别是如何工作的？"></a><strong>3.存活探针有哪几种探测方式？分别是如何工作的？</strong></h5><p>同“存活”探针</p><h5 id="4-如果存活探针探测失败会采取什么策略？-1"><a href="#4-如果存活探针探测失败会采取什么策略？-1" class="headerlink" title="4.如果存活探针探测失败会采取什么策略？"></a><strong>4.如果存活探针探测失败会采取什么策略？</strong></h5><p>如果ReadinessProbe失败，endpoints controller将会从service所匹配到的endpoint列表中移除关于这个container的IP地址，所以如果配置了就绪探针，对于Service匹配到的 endpoints有哪些，是ReadinessProbe决定的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h4 id=&quot;k8s容器检查探针&quot;&gt;&lt;a href=&quot;#k8s容器检查探针&quot; class=&quot;headerlink&quot; title=&quot;k8s容器检查探针&quot;&gt;&lt;/a&gt;&lt;strong&gt;k8s容器检查探针&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;当容器部署在k8s中的时
      
    
    </summary>
    
      <category term="k8s" scheme="https://liupei.link/categories/k8s/"/>
    
    
      <category term="k8s" scheme="https://liupei.link/tags/k8s/"/>
    
  </entry>
  
</feed>
